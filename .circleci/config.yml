# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# 実行環境
executors:
  default:
    working_directory: ~/workspace
    docker:
      - image: circleci/node:erbium # ジョブ実行環境のDockerイメージ(node 12.x)

# 再利用するstep
commands:
  restore_npm:
    steps:
      - restore_cache:
          name: restore npm dependencies
          keys:
            - npm-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - npm-{{ .Branch }}-
            - npm-
      - restore_cache:
          name: restore dist
          keys:
            - dist-{{ .Branch }}-{{ .Revision }}
  npm_install:
    steps:
      - run:
          name: npm install
          command: npm install

jobs:
  build: # ジョブ名
    executor: # nameで使いたい実行環境を指定
      name: default
    steps:
      - checkout # ソースコードのチェックアウト
      - restore_npm
      - npm_install
      - run: # 順に実行したいコマンド
          name: build
          command: npm run build
      - run:
          name: unit test
          command: npm run test:unit
      - run:
          name: lint
          command: npm run lint
      - save_cache:
          key: npm-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - ~/workspace/node_modules
          force: yes
      - save_cache:
          key: dist-{{ .Branch }}-{{ .Revision }}
          paths:
            - ~/workspace/dist
          force: yes

  deploy:
    executor:
      name: default
    steps:
      - checkout
      - restore_npm
      - npm_install
      - run:
          name: install firebase-tools
          command: npm install --save-dev firebase-tools
      - run:
          name: deploy to Firebase Hosting
          command: ./node_modules/.bin/firebase deploy --token=$FIREBASE_TOKEN

# Orchestrate or schedule a set of jobs
workflows:
  build_deploy: # ワークフローの名前
    # Run the welcome/run job in its own container
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: master # masterブランチのみ
